name: 'Edge Deploy CI (Maven)'

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "**.md"
      - "*.txt"
      - ".github/**" 
  workflow_dispatch:


env:
  DEFAULT_MUSIC_FOLDER: /tmp/music
  EXCLUDED_TEST_GROUPS:
  REGISTRY_IMAGE: ghcr.io/kagemomiji/airsonic-advanced

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - jdk: 17
          platform: linux/arm/v7
          docker_version: 17.0.15_6
        - jdk: 21
          platform: linux/amd64
          docker_version: 21.0.7_6
        - jdk: 21
          platform: linux/arm64
          docker_version: 21.0.7_6
    outputs:
      tag: ${{ steps.tagcalc.outputs.tag }}
      docker-label: ${{ steps.docker-meta.outputs.labels }}
    steps:
      - name: Prepare
        id: prep
        run: |
          platform="${{ matrix.cfg.platform }}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.cfg.jdk }}
          distribution: 'temurin'
      - name: Setup ffmpeg
        id: setup-ffmpeg 
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.cfg.platform }}
      - name: Calculate tags
        if: success()
        id: tagcalc
        run: |
          # Create tag
          ver=$(grep "version=" airsonic-main/target/generated/build-metadata/build.properties | cut -d"=" -f2);
          ts=$(grep "timestamp=" airsonic-main/target/generated/build-metadata/build.properties | cut -d"=" -f2);
          # Note this doesn't completely follow semver because docker tags do not take a + sign
          tag=$ver\.$ts;
          echo $tag;
          echo "tag=$tag" >> $GITHUB_OUTPUT
      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            latest
            edge-latest
            edge-${{ steps.tagcalc.outputs.tag }}
            gitcommit-${{ github.sha }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - run: mkdir -p ${DEFAULT_MUSIC_FOLDER}
      - name: Build with Maven
        run: mvn -DexcludedGroups=${EXCLUDED_TEST_GROUPS} -Ddocker.testing.default-music-folder=${DEFAULT_MUSIC_FOLDER} verify -B -P integration-test
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push multiplatform images to Dockerhub
        uses: docker/build-push-action@v6
        id: build
        with:
          file: install/docker/Dockerfile
          context: install/docker
          build-args: |
            IMAGE_JAVA_VERSION=${{matrix.cfg.docker_version}}
          platforms: ${{ matrix.cfg.platform }}
          push: true
          labels: ${{steps.docker-meta.outputs.labels}}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export image digest
        run: |
          mkdir -p /tmp/digests
          digest="${{steps.build.outputs.digest}}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: docker-digest-${{ steps.prep.outputs.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
      - name: Upload war
        if: ${{matrix.cfg.jdk == 21 && matrix.cfg.platform == 'linux/amd64'}}
        uses: actions/upload-artifact@v4
        with:
          name: airsonic.war
          path: |
            airsonic-main/target/airsonic.war
          if-no-files-found: error
          retention-days: 1
      - name: Upload checksums
        if: ${{matrix.cfg.jdk == 21 && matrix.cfg.platform == 'linux/amd64'}}
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-checksums.sha
          path: |
            airsonic-main/target/artifacts-checksums.sha
          if-no-files-found: error
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Download digest
        uses: actions/download-artifact@v4
        with:
          pattern: docker-digest-*
          path: /tmp/digests
          merge-multiple: true
      - name: Download war
        uses: actions/download-artifact@v4
        with:
          name: airsonic.war
          path: /tmp/artifacts
      - name: Download checksums
        uses: actions/download-artifact@v4
        with:
          name: artifacts-checksums.sha
          path: /tmp/artifacts
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v5
        env:
          RELEASE_TAG: ${{ needs.deploy.outputs.tag }}
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            latest
            edge-latest
            edge-${{ env.RELEASE_TAG }}
            gitcommit-${{ github.sha }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect Image
        env:
          RELEASE_TAG: ${{ needs.deploy.outputs.tag }}
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ env.RELEASE_TAG }}

      - name: Deploy to GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ needs.deploy.outputs.tag }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: Edge Release ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: true
          generate_release_notes: true
          files: |
            /tmp/artifacts/airsonic.war
            /tmp/artifacts/artifacts-checksums.sha
