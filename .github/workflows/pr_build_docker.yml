name: 'Build docker image on PR'

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "*.txt"
      - ".github/**" 
      - "!.github/workflows/pr_build_docker.yml"

permissions:
  packages: write

env: 
  REGISTRY_IMAGE: ghcr.io/kagemomiji/airsonic-advanced

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - jdk: 17
          platform: linux/arm/v7
          docker_version: 17.0.15_6
        - jdk: 21
          platform: linux/amd64
          docker_version: 21.0.7_6
        - jdk: 21
          platform: linux/arm64
          docker_version: 21.0.7_6
    runs-on: ubuntu-latest
    if: github.repository == github.event.pull_request.head.repo.full_name 
    steps:
      - name: Prepare
        id: prep
        run: |
          platform="${{ matrix.cfg.platform }}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.cfg.jdk }}
          distribution: 'temurin'
      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            pr-${{ github.event.pull_request.number }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.cfg.platform }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build with Maven
        run: mvn package -DskipTests -B -P docker
      - name: Build and push by digest
        uses: docker/build-push-action@v6
        id: build
        with:
          file: install/docker/Dockerfile
          context: install/docker
          platforms: ${{matrix.cfg.platform}}
          build-args: |
            IMAGE_JAVA_VERSION=${{matrix.cfg.docker_version}}
          labels: ${{steps.docker-meta.outputs.labels}}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          push: true
      - name: Export image digest
        run: |
          mkdir -p /tmp/digests
          digest="${{steps.build.outputs.digest}}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: docker-digest-${{ steps.prep.outputs.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.repository == github.event.pull_request.head.repo.full_name
    steps:
      - name: Download digest
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: docker-digest-*
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            pr-${{ github.event.pull_request.number }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect Image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:pr-${{ github.event.pull_request.number }}
